
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

#### http 重定向至 https 
    server{
        listen 80;
        server_name google.muyichun.tk;
        return 301 https://$server_name$request_uri;
    }

#### 前端模板代码,未压缩的
    server{
        listen 9888;
        server_name www.muyichun.com;
        location / {
            root /home/dev/h5;
            try_files $uri $uri/ /index.html;
        }
    }

#### Vue Router History模式
    server{
        listen 9877;
        server_name manage.yxjk.qiqiaonet.com;
        location / {
            root /home/dev/WebManagementClient/dist/;     #### 前端VueJS打包后的文件
            try_files $uri $uri/ /index.html;             #### 默认拷贝过去就行,有时间得研究研究 
        }
    }

####  nginx 转发路径
    server {
        listen 80;
        server_name: www.qiqiaonet.com;
        location / {
            root /usr/local/nginx/conf/gw;        #### 定位根目录, BTW: 注意权限坑
            index /templates/index.html;
        }
        location = /apple-app-site-association {
            root /usr/local/nginx/conf/gw;        #### 固定静态页面或文件下载
            index /apple-app-site-association;
        }
    }

#####  端口反向代理示例
    server {
        listen 80;       #### 一般是80或者其他端口
        server_name jenkins.qiqiaonet.com;            #### 其实就是本地localhost
        location /jenkins {
            proxy_pass http://47.99.196.116:9000/;    #### 内部服务端口1  
        }
        location / {
            proxy_pass http://localhost:9876/;        #### 内部服务端口2
        }
        error_page 500 502 503 504 /50x.html;
        location = /50x.html {
            root html;
        }
    }

    # HTTPS server
    server {
        listen       443 ssl;
        server_name  www.qiqiaonet.com;

        ssl_certificate     4029793_www.qiqiaonet.com_nginx/4029793_www.qiqiaonet.com.pem;
        ssl_certificate_key  4029793_www.qiqiaonet.com_nginx/4029793_www.qiqiaonet.com.key;

        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;

        ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers  on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; 
        #### 重定向至http
        location / {
            proxy_pass http://www.qiqiaonet.com;     
        }
    }
    
    # HTTPS server
    server {
        listen       443 ssl;
        server_name  api.lovepinpin.com;
        ssl_certificate      1_api.lovepinpin.com_bundle.crt;
        ssl_certificate_key  2_api.lovepinpin.com.key;
        ssl_session_cache    shared:SSL:1m;
        ssl_session_timeout  5m;
        ssl_ciphers  ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;
        ssl_prefer_server_ciphers  on;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; 
        
        root /home/temple;
        location / {
            index index.html;       #### 根目录
        }
        location /somepath{         #### 流量伪装,暂时用不着
            proxy_redirect off;
            proxy_pass http://127.0.0.1:9506;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            # Show real IP in v2ray access.log
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}

--------------------------------------------------------------------------------------------------------- 微服务配置，网关和授权服务器，参考一下参数：
	upstream gatewayserver{
                server 172.16.10.230:1210 weight=1;
		#server 172.16.10.168:1210 weight=1;
		#server 172.16.10.169:1210 weight=1;
	}	
	upstream authserver{
                server 172.16.10.230:8083 weight=1;
		#server 172.16.10.168:1201 weight=1;
		#server 172.16.10.169:1201 weight=1;

	}
	
          server {
		#nginx监听的ip跟端口
		listen 8812;
		#域名监听方式
		# server_name 10.194.51.15;
		charset  utf-8;
		client_max_body_size 200M;
                          
	
   location /big-screen/{
                        proxy_read_timeout 3600;
                        alias /data/bdcp/bdcpweb/big-screen/dist/;
                       # error_page 405 =200  $request_uri;
                        index  index.html index.htm;
                       try_files $uri $uri/ /big-screen/index.html;
                }	

		
				
		location ^~ /authserver/{
			proxy_pass http://authserver;
			
			#配置nginx跨域
			add_header Access-Control-Allow-Origin *;
			add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
			add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

			if ($request_method = 'OPTIONS') {
				return 204;
			}
			#使用websocket服务升级
			proxy_http_version 1.1; 
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
			#将实际ip转发到后端服务器,登录跳转重定向使用
			proxy_set_header Host $host:$server_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
			
		}
							
		
		location /gateway/{
			#配置nginx跨域
			add_header Access-Control-Allow-Origin *;
			add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
			add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

			if ($request_method = 'OPTIONS') {
				return 204;
			}
			#使用websocket服务升级
			proxy_http_version 1.1; 
			proxy_pass http://gatewayserver;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
			#将实际ip转发到后端服务器,登录跳转重定向使用
			proxy_set_header Host $host:$server_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
			
		}
		
						
	}

	
	server {
		#nginx监听的ip跟端口
		listen 8810;
		#域名监听方式
		# server_name 10.194.51.15;
		charset  utf-8;
		client_max_body_size 200M;
		location  /{
			proxy_read_timeout 3600;
			alias /data/bdcp/bdcpweb/;
		}		

		
				
		location ^~ /authserver/{
			proxy_pass http://authserver;
			
			#配置nginx跨域
			add_header Access-Control-Allow-Origin *;
			add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
			add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

			if ($request_method = 'OPTIONS') {
				return 204;
			}
			#使用websocket服务升级
			proxy_http_version 1.1; 
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
			#将实际ip转发到后端服务器,登录跳转重定向使用
			proxy_set_header Host $host:$server_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
			
		}
							
		
		location /gateway/{
			#配置nginx跨域
			add_header Access-Control-Allow-Origin *;
			add_header Access-Control-Allow-Methods 'GET, POST, OPTIONS';
			add_header Access-Control-Allow-Headers 'DNT,X-Mx-ReqToken,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Authorization';

			if ($request_method = 'OPTIONS') {
				return 204;
			}
			#使用websocket服务升级
			proxy_http_version 1.1; 
			proxy_pass http://gatewayserver;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
			#将实际ip转发到后端服务器,登录跳转重定向使用
			proxy_set_header Host $host:$server_port;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For     $proxy_add_x_forwarded_for;
			
		}
		
						
	}


